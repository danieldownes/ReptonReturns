Rem * Title  : Repton Returns
Rem * Author : Ex-D
Rem * Date   : 24-8-2000

dim mapdata$(30)
dim pob(1)
dim cx(1)
dim cy(1)
dim oldcx(1)
dim oldcy(1)

`Repton Returns
`Start: 23-08-2000 End: ??-??-????

`----------------------------------------------------------------------------
`Development history:

`12-10-2000:
`            + Movement core
`            + 'intihideandshow' function
`            + 'findobno' function

`11-10-2000:
`            + 'hideandshow' function

`06-09-2000:
`            + Load 'SUB program' for Editor

`03-09-2000:
`            + User function list
`            * 'getmapdat' funtion, now uses the 'convertdatstring' function
`            + 'convertdatstring' function
`            + 'convertdat' function
`            + 'givemapdat' function
`            + 'dorocksfall' function

`01-09-2000:
`            + Save 'SUB program' for Editor.
`
`30-08-2000:
`            + Most of Editor made! inc(Graphics, Core, GUI, MAP engine, etc.)
`
`29-08-2000:
`            * MAP engine is now a set of plains, not a matrix.
`
`25-08-2000:
`            + Most Grapghics.
`            + 'getmapdata' function.
`            + Finished first MAP file in pure ASCII!
`            * MAP file lay design - single charictor for each cell.
`
`24-08-2000:
`            + 'themap' function.
`            + Making first MAP file in pure ASCII!
`            + MAP file layout design.
`            + Created the DBA file.
`
`23-08-2000:
`            + Font made!
`----------------------------------------------------------------------------
`                                                      |
`                                                      | Key:
`                                                      |  + = added
`                                                      |  - = removed
`                                                      |  * = changed/updated
`                                                      \---------------------


`User function list, with syntax and description:
`
`Function Name:            Syntax:               Description:
`dorocksfall               ()                     Cheaks if rocks need to fall.

`systemsetup               ()                     Sets up system! (Like, derr!)

`themap                     (mapfilename$)         Loads images and map array.

`getmapdata                  (x,y)                  Returns the type of charicter at x,y from arrray.
`givemapdate               (x,y,dat)            Changes map array.
`convertdat                  (dat)                  Returns the converted string from the value.
`convertdatstring            (dat$)               Returns the converted value from the string.

`del                        ()                     Unloads images, arrays, etc.

`intihideandshow            ()                     Hides titles that are not being displayed.
`hideandshow               (move)               Shows/Hide new/old tiles when you move.

`findobno                  (x,y)                  Returns the object number at x,y.


`The program...
systemsetup()




   for n = 1 to 810
      make object plain n,10,10
      hide object n
   next n

rem Place and point camera

cx(1) = 0
cy(1) = 0
cz = -150



`Load MAP
themap("pre.dat")

intihideandshow()

`Main loop
repeat


`Move?
move = 0

if upkey() = 1 then move = 8

if downkey() = 1 then move = 2

if rightkey() = 1 then move = 6

if leftkey() = 1 then move = 4

if inkey$() = "a" then cz = cz + 1

if inkey$() = "z" then cz = cz - 1

if move <> 0
   hideandshow(move)

   if move = 8

      pob(1) = pob(1) - 30
      oldcy(1) = oldcy(1) + 10
   endif

   if move = 2

      pob(1) = pob(1) + 30
      oldcy(1) = oldcy(1) - 10
   endif

   if move = 6

      pob(1) = pob(1) + 1
      oldcx(1) = oldcx(1) + 10
   endif

   if move = 4
      pob(1) = pob(1) - 1
      oldcx(1) = oldcx(1) - 10
   endif
endif



`position camera cx(1),cy(1),cz
position camera oldcx(1),oldcy(1),cz



`De-bug
`   set cursor 1,1
`End of De-bug

sync

until escapekey() = 1

end


`Functions...

function themap(mapfile$)



   open to read 1,"theme\" + mapfile$
   read string 1,nameofmap$
   for n = 1 to 27
      read string 1,mapdata$(n)
   next n

   close file 1

`Load images...
load image "theme\" + nameofmap$ + "\wall.bmp",1
load image "theme\" + nameofmap$ + "\dimond.bmp",2
load image "theme\" + nameofmap$ + "\wall8.bmp",3
load image "theme\" + nameofmap$ + "\wall2.bmp",4
load image "theme\" + nameofmap$ + "\wall6.bmp",5
load image "theme\" + nameofmap$ + "\wall4.bmp",6
load image "theme\" + nameofmap$ + "\wall9.bmp",7
load image "theme\" + nameofmap$ + "\wall7.bmp",8
load image "theme\" + nameofmap$ + "\wall3.bmp",9
load image "theme\" + nameofmap$ + "\wall1.bmp",10
load image "theme\" + nameofmap$ + "\earth.bmp",11
load image "theme\" + nameofmap$ + "\rock.bmp",12
load image "theme\" + nameofmap$ + "\safe.bmp",13
load image "theme\" + nameofmap$ + "\key.bmp",14
load image "theme\" + nameofmap$ + "\egg.bmp",15
load image "theme\" + nameofmap$ + "\repton.bmp",16
load image "theme\" + nameofmap$ + "\crown.bmp",17
load image "theme\" + nameofmap$ + "\cage.bmp",18
load image "theme\" + nameofmap$ + "\spirit.bmp",19
load image "theme\" + nameofmap$ + "\bomb.bmp",20






onn = 1
   for my = 1 to 27
      for mx = 1 to 30
           `Find Position in world
         rmx = mx * 10
         rmy = (my - my - my) * 10
         position object onn,rmx,rmy,0
         `Get Texture Data
         dat = getmapdata(mx,my)
         `Add Texture to Object
         if dat <> 0 then texture object onn,dat else color object onn,rgb(0,0,0)
         `Check for Repton, if found point and move camera
         if dat = 16 then pob(1) = onn:oldcx(1) = rmx:oldcy(1) = rmy

         onn = onn + 1
      next mx
   next my

endfunction nameofmap$


function getmapdata(x,y)
   mapdat$ = mid$(mapdata$(y), (x * 2) - 1)
   dat = convertdatstring(mapdat$)
endfunction dat


function givemapdata(x,y,dat)
   leftdat$ = left$(mapdata$(y), (x * 2) - 2)
   rightdat$ = right$(mapdata$(y), 60 - (x * 2) + 1)
   mapdata$(y) = leftdat$ + convertdat(dat) + rightdat$
endfunction


function convertdat(dat)
   if dat = 0 then mapdat$ = "0"
   if dat = 1 then mapdat$ = "5"
   if dat = 2 then mapdat$ = "d"
   if dat = 3 then mapdat$ = "8"
   if dat = 4 then mapdat$ = "2"
   if dat = 5 then mapdat$ = "6"
   if dat = 6 then mapdat$ = "4"
   if dat = 7 then mapdat$ = "9"
   if dat = 8 then mapdat$ = "7"
   if dat = 9 then mapdat$ = "3"
   if dat = 10 then mapdat$ = "1"
   if dat = 11 then mapdat$ = "e"
   if dat = 12 then mapdat$ = "r"
   if dat = 13 then mapdat$ = "s"
   if dat = 14 then mapdat$ = "k"
   if dat = 15 then mapdat$ = "g"
   if dat = 16 then mapdat$ = "i"
   if dat = 17 then mapdat$ = "t"
   if dat = 18 then mapdat$ = "c"
   if dat = 19 then mapdat$ = "p"
   if dat = 20 then mapdat$ = "b"
endfunction mapdat$


function convertdatstring(mapdat$)
   if mapdat$ = "0" then dat = 0
   if mapdat$ = "5" then dat = 1
   if mapdat$ = "d" then dat = 2
   if mapdat$ = "8" then dat = 3
   if mapdat$ = "2" then dat = 4
   if mapdat$ = "6" then dat = 5
   if mapdat$ = "4" then dat = 6
   if mapdat$ = "9" then dat = 7
   if mapdat$ = "7" then dat = 8
   if mapdat$ = "3" then dat = 9
   if mapdat$ = "1" then dat = 10
   if mapdat$ = "e" then dat = 11
   if mapdat$ = "r" then dat = 12
   if mapdat$ = "s" then dat = 13
   if mapdat$ = "k" then dat = 14
   if mapdat$ = "g" then dat = 15
   if mapdat$ = "i" then dat = 16
   if mapdat$ = "t" then dat = 17
   if mapdat$ = "c" then dat = 18
   if mapdat$ = "p" then dat = 19
   if mapdat$ = "b" then dat = 20

`   if mapdat$ = "%" then dat =
`   if mapdat$ = "*" then dat =
`   if mapdat$ = ")" then dat =
`   if mapdat$ = "^" then dat =
`   if mapdat$ = "$" then dat =
`   if mapdat$ = "(" then dat =
`   if mapdat$ = "&" then dat =
`   if mapdat$ = "£" then dat =
`   if mapdat$ = "!" then dat =
endfunction dat


function findobno(x,y)
  obno = 0

  for ny = 1 to y
      for nx = 1 to x
         obno = obno + 1
      next nx
   next ny
endfunction obno


function intihideandshow()

   obno = findobno(x,y)

   for sy = -3 to 3
      for sx = -4 to 4
      obn = pob(1) + sx + (sy * 30)

      if obn > 0 and obn < 811 then show object obn

      next sx
   next sy

endfunction


function hideandshow(movee)
`8 = up, 2 = down, 4 = left, 6 = right (numpad)

   if movee = 8
      for sx = -4 to 4
         obn = pob(1) + sx - 120

         if obn > 0 and obn < 811 then show object obn
      next sx

      for sx = -4 to 4
         obn = pob(1) + sx + 90

         if obn > 0 and obn < 811 then hide object obn
      next sx
   endif

   if movee = 2
      for sx = -5 to 5
         obn = pob(1) + sx + 90

         if obn > 0 and obn < 811 then show object obn
      next sx

      for sx = -4 to 4
         obn = pob(1) + sx - 120

         if obn > 0 and obn < 811 then hide object obn
      next sx
   endif

   if movee = 6
      for sy = -4 to 4
         obn = pob(1) + 4 + (sy * 30)

         if obn > 0 and obn < 811 then show object obn
      next sy

      for sy = -4 to 4
         obn = pob(1) - 4 + (sy * 30)

         if obn > 0 and obn < 811 then hide object obn
      next sy
   endif

   if movee = 4
      for sy = -3 to 3
         obn = pob(1) - 4 + (sy * 30)

         if obn > 0 and obn < 811 then show object obn
      next sy

      for sy = -3 to 3
         obn = pob(1) + 4 + (sy * 30)

         if obn > 0 and obn < 811 then hide object obn
      next sy
   endif

endfunction


`In-Game Functions...

function dorocksfall()
   for my = 27 to 1 step -1
      for mx = 30 to 1 step -1
         dat = getmapdata(mx,my)
         if dat = 12 or dat = 15

` and objectmoving(n) = 0

            `Cheack if rock falls strate down
            if getmapdata(mx,my - 1) = 0
               givemapdata(mx,my,0)
               givemapdata(mx,my - 1,dat)
               goto nextdorocksfall
            endif

            `Cheack if rock falls left
            if getmapdata(mx,my - 1) = 2 or getmapdata(mx,my - 1) = 8 or getmapdata(mx,my - 1) = 12 or getmapdata(mx,my - 1) = 14 or getmapdata(mx,my - 1) = 15 or getmapdata(mx,my - 1) = 17 or getmapdata(mx,my - 1) = 20
               if getmapdata(mx - 1,my) = 0 and getmapdata(mx - 1,my - 1) = 0
                  givemapdata(mx,my,0)
                  givemapdata(mx,my - 1,dat)
                  goto nextdorocksfall
               endif
            endif

            `Cheack if rock falls right
            if getmapdata(mx,my - 1) = 7 or getmapdata(mx,my - 1) = 12 or getmapdata(mx,my - 1) = 15 and getmapdata(mx + 1,my) = 0 and getmapdata(mx + 1,my + 1) = 0
               givemapdata(mx,my,0)
               givemapdata(mx,my - 1,dat)
               goto nextdorocksfall
            endif
         endif

nextdorocksfall:

      next mx
   next my
endfunction

function systemsetup()
   hide mouse
`   disable escapekey
   autocam off
   sync on

   backdrop on
   color backdrop rgb(0,0,0)
endfunction

